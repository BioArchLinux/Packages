diff --git a/mariner/tests/testthat/_snaps/InteractionArray.md b/mariner/tests/testthat/_snaps/InteractionArray.md
index 492df25..e6645e7 100644
--- a/mariner/tests/testthat/_snaps/InteractionArray.md
+++ b/mariner/tests/testthat/_snaps/InteractionArray.md
@@ -3,7 +3,7 @@
     Code
       counts(iarr, TRUE)
     Output
-      <11 x 11 x 10 x 2> array of class DelayedArray and type "double":
+      <11 x 11 x 10 x 2> DelayedArray object of type "double":
       ,,1,FS
                14740000 14745000 14750000 ... 14785000 14790000
       14435000        0        0        0   .        0        0
@@ -39,7 +39,7 @@
     Code
       counts(iarr[1:3, 1:2])
     Output
-      <11 x 11 x 3 x 2> array of class DelayedArray and type "double":
+      <11 x 11 x 3 x 2> DelayedArray object of type "double":
       ,,1,FS
              [,1]  [,2]  [,3] ... [,10] [,11]
        [1,]     0     0     0   .     0     0
@@ -64,7 +64,7 @@
     Code
       counts(iarr[3:4, 1])
     Output
-      <11 x 11 x 2 x 1> array of class DelayedArray and type "double":
+      <11 x 11 x 2 x 1> DelayedArray object of type "double":
       ,,1,FS
              [,1]  [,2]  [,3] ... [,10] [,11]
        [1,]     0     0     0   .     0     0
@@ -87,7 +87,7 @@
     Code
       counts(iarr[1:7, 1:2])
     Output
-      <11 x 11 x 7 x 2> array of class DelayedArray and type "double":
+      <11 x 11 x 7 x 2> DelayedArray object of type "double":
       ,,1,FS
              [,1]  [,2]  [,3] ... [,10] [,11]
        [1,]     0     0     0   .     0     0
@@ -112,7 +112,7 @@
     Code
       counts(iarr[1:7, 1])
     Output
-      <11 x 11 x 7 x 1> array of class DelayedArray and type "double":
+      <11 x 11 x 7 x 1> DelayedArray object of type "double":
       ,,1,FS
              [,1]  [,2]  [,3] ... [,10] [,11]
        [1,]     0     0     0   .     0     0
@@ -137,7 +137,7 @@
     Code
       counts(iarr[1, 1:2])
     Output
-      <11 x 11 x 1 x 2> array of class DelayedArray and type "double":
+      <11 x 11 x 1 x 2> DelayedArray object of type "double":
       ,,1,FS
              [,1]  [,2]  [,3] ... [,10] [,11]
        [1,]     0     0     0   .     0     0
@@ -160,7 +160,7 @@
     Code
       counts(iarr[1, 1])
     Output
-      <11 x 11 x 1 x 1> array of class DelayedArray and type "double":
+      <11 x 11 x 1 x 1> DelayedArray object of type "double":
       ,,1,FS
              [,1]  [,2]  [,3] ... [,10] [,11]
        [1,]     0     0     0   .     0     0
diff --git a/mariner/tests/testthat/_snaps/MergedGInteractions.md b/mariner/tests/testthat/_snaps/MergedGInteractions.md
index f27c0ed..999e149 100644
--- a/mariner/tests/testthat/_snaps/MergedGInteractions.md
+++ b/mariner/tests/testthat/_snaps/MergedGInteractions.md
@@ -4,6 +4,7 @@
       .mapIds(x)
     Output
          seqnames1    start1      end1 width1 strand1 seqnames2    start2      end2
+            <fctr>     <int>     <int>  <int>  <fctr>    <fctr>     <int>     <int>
       1:      chr9 118645000 118650000   5001       *      chr9 119330000 119335000
       2:      chr9 118645000 118650000   5001       *      chr9 119330000 119335000
       3:     chr17  80635000  80640000   5001       *     chr17  80920000  80925000
@@ -12,16 +13,18 @@
       6:      chr9  14460000  14465000   5001       *      chr9  14765000  14770000
       7:     chr17  47645000  47650000   5001       *     chr17  48075000  48080000
       8:     chr17  47645000  47650000   5001       *     chr17  48075000  48080000
-         width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg
-      1:   5001       * 0,0,0   2.611034               0.9860443      1.414376
-      2:   5001       * 0,0,0   2.611034               0.9860443      1.414376
-      3:   5001       * 0,0,0   2.889573               0.9713564      1.379367
-      4:   5001       * 0,0,0   2.889573               0.9713564      1.379367
-      5:   5001       * 0,0,0   3.272132               0.9868535      2.233533
-      6:   5001       * 0,0,0   3.272132               0.9868535      2.233533
-      7:   5001       * 0,0,0   3.520431               0.9801694      2.433166
-      8:   5001       * 0,0,0   3.520431               0.9801694      2.433166
+         width2 strand2  color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg
+          <int>  <fctr> <char>      <num>                   <num>         <num>
+      1:   5001       *  0,0,0   2.611034               0.9860443      1.414376
+      2:   5001       *  0,0,0   2.611034               0.9860443      1.414376
+      3:   5001       *  0,0,0   2.889573               0.9713564      1.379367
+      4:   5001       *  0,0,0   2.889573               0.9713564      1.379367
+      5:   5001       *  0,0,0   3.272132               0.9868535      2.233533
+      6:   5001       *  0,0,0   3.272132               0.9868535      2.233533
+      7:   5001       *  0,0,0   3.520431               0.9801694      2.433166
+      8:   5001       *  0,0,0   3.520431               0.9801694      2.433166
          Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg       std    value
+                          <num>                  <num>    <num>     <num>    <num>
       1:              1.8755854               2.121637 2.605124 0.7942202 4.272311
       2:              1.8755854               2.121637 2.605124 0.7942202 4.272311
       3:              1.9105295               1.946362 1.854944 0.6729783 3.553193
@@ -30,13 +33,14 @@
       6:              1.0059373               1.645508 3.437883 0.5164226 4.332049
       7:              0.8104557               1.486894 3.200528 0.6733462 3.920933
       8:              0.8104557               1.486894 3.200528 0.6733462 3.920933
-         src id grp clst i.id
-      1:  FS  1   1    1    1
-      2:  FS  5   1    1    1
-      3:  FS  2   2    1    2
-      4:  FS  6   2    1    2
-      5:  WT  3   1    2    3
-      6:  WT  7   1    2    3
-      7:  WT  4   2    2    4
-      8:  WT  8   2    2    4
+            src    id   grp  clst  i.id
+         <char> <int> <int> <int> <int>
+      1:     FS     1     1     1     1
+      2:     FS     5     1     1     1
+      3:     FS     2     2     1     2
+      4:     FS     6     2     1     2
+      5:     WT     3     1     2     3
+      6:     WT     7     1     2     3
+      7:     WT     4     2     2     4
+      8:     WT     8     2     2     4
 
